// <auto-generated />
using System;
using FollowUP.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FollowUP.Infrastructure.Migrations
{
    [DbContext(typeof(FollowUPContext))]
    [Migration("20200924153744_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FollowUP.Core.Domain.AccountProxy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<Guid>("ProxyId");

                    b.HasKey("Id");

                    b.ToTable("AccountProxies");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.AccountSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<int>("ActionsPerDay");

                    b.Property<int>("FollowsPerDay");

                    b.Property<int>("LikesPerDay");

                    b.Property<int>("MaxIntervalMilliseconds");

                    b.Property<int>("MinIntervalMilliseconds");

                    b.Property<int>("UnfollowsPerDay");

                    b.HasKey("Id");

                    b.ToTable("AccountSettings");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.AccountStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<int>("ActionsCount");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("FollowsCount");

                    b.Property<int>("LikesCount");

                    b.Property<int>("UnfollowsCount");

                    b.HasKey("Id");

                    b.ToTable("AccountStatistics");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.ChildComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<string>("Author");

                    b.Property<long>("AuthorId");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("LikesCount");

                    b.Property<Guid>("ParentCommentId");

                    b.Property<string>("ProfilePictureUri");

                    b.HasKey("Id");

                    b.ToTable("ChildComments");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<string>("Author");

                    b.Property<long>("AuthorId");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("LikesCount");

                    b.Property<string>("ParentImageUri");

                    b.Property<string>("ParentMediaId");

                    b.Property<string>("ProfilePictureUri");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.DailyPromotionPercentage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Percentage");

                    b.Property<Guid>("PromotionId");

                    b.Property<Guid>("ScheduleDayId");

                    b.HasKey("Id");

                    b.ToTable("DailyPromotionPercentages");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.DayGroupConnection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Order");

                    b.Property<Guid>("ScheduleGroupId");

                    b.Property<Guid>("SingleScheduleDayId");

                    b.HasKey("Id");

                    b.ToTable("DayGroupConnections");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.ExplicitDaySchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("SingleScheduleDayId");

                    b.HasKey("Id");

                    b.ToTable("ExplicitDaySchedules");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.FollowedProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("ProfileId");

                    b.HasKey("Id");

                    b.ToTable("FollowedProfiles");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.InstagramAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ActionCooldown");

                    b.Property<string>("AndroidDevice");

                    b.Property<int>("AuthenticationStep");

                    b.Property<DateTime>("BannedUntil");

                    b.Property<DateTime>("CommentsModuleExpiry");

                    b.Property<string>("FilePath");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("PreviousCooldownMilliseconds");

                    b.Property<DateTime>("PromotionsModuleExpiry");

                    b.Property<Guid>("UserId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("InstagramAccounts");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.InstagramProxy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiryDate");

                    b.Property<string>("Ip");

                    b.Property<bool>("IsTaken");

                    b.Property<string>("Password");

                    b.Property<string>("Port");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("InstagramProxies");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.MonthlyGroupSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<DateTime>("BeginDate");

                    b.Property<DateTime>("EndDate");

                    b.Property<Guid>("ScheduleGroupId");

                    b.HasKey("Id");

                    b.ToTable("MonthlyGroupSchedules");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Label");

                    b.Property<string>("LastMediaId");

                    b.Property<string>("NextMinId");

                    b.Property<DateTime>("NextMinIdDate");

                    b.Property<int>("PromotionType");

                    b.HasKey("Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.PromotionComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedAt");

                    b.HasKey("Id");

                    b.ToTable("PromotionComments");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Revoked");

                    b.Property<string>("Token");

                    b.Property<string>("UserAgent");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.ScheduleGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<int>("Colour");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ScheduleGroups");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.SingleScheduleDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("SingleScheduleDays");
                });

            modelBuilder.Entity("FollowUP.Core.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("Salt");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Username");

                    b.Property<bool>("Verified");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
